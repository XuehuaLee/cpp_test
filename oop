* stock00.h
`#idndef STOCK00_H_
#define STOCK00_H_

#include <string>

class Stock
{
private:
	std::string company;
	long shares;
	double share_val;
	double total_val;
	void set_tot() {tatal_val = shares * share_val;}
public:
	void acquire(const std::string & co, long n, double pr);
	void buy(long num, double price);
	void sell(long num, double price);
	void update(double price);
	void show();	
};

#endif`

* stock00.cpp
`#include <iostream>
#include "stock00.h"

void Stock::acquire(const std::string & co,long n, double pr)
{
	company = co;
	if( n < 0)
	{
		std::cout << "Number of shares can't be negative;"
		<< company <, "shares set to 0.\n";
		shares = 0;
	}
	else
		shares = n;
	share_val = pr;
	set_tot();
}

void Stock::buy(long num, double price)
{
	if(num < 0)
	{
		std::cout << "Number of shares purchased can't be negative.Transation is aborted.\n";
	}
	else
	{
		shares += num;
		share_val = price;
		set_tot();
	}
}

void Stock::sell(long num, double price)
{
	using std::cout;
	if( num < 0)
	{
		cout << "Number of shares purchased can't be negative.Transation is aborted.\n";
	}
	else if(num > shares)
	{
		cout << "You can't sell more than you have! Transation is aborted.\n";
	}
	else
	{
		shares -= num;
		share_val = price;
		set_tot();
	}
}

void Stock::update(double price)
{
	share_val = price;
	set_tot();
}

void Stock::show()
{
	std::cout << "Company:" << company
			  << "Shares:" << shares << '\n'
			  << "Share Price: $" << share_val
			  << "Total Worth: $" << total_val << '\n';
}
`
